# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR

"on": pull_request

env:
  GIT_USERNAME: ${{ github.actor }}
  GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  FIX_COMMIT_MESSAGE: Fixed /hook_tools/lint.py lints

jobs:
  build_public:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          registry-url: "https://registry.npmjs.org"
      - run: |
          git show ${{ github.event.pull_request.head.sha }} --format=%s --no-patch --no-color

          if [[ "$(git show ${{ github.event.pull_request.head.sha }} --format=%s --no-patch --no-color)" == "${{ env.FIX_COMMIT_MESSAGE }}" ]]; then
            # The previous commit is a Build.
            exit 0
          fi

          npm install
          ./scripts/parcelBuild.sh

          # Authenticate with GitHub.
          git config --global user.name "${{ env.GIT_USERNAME }}"
          git config --global user.email "${{ env.GIT_USERNAME }}@users.noreply.github.com"
          cat <<- EOF > $HOME/.netrc
          machine github.com
          login ${{ env.GIT_USERNAME }}
          password ${{ env.GIT_PASSWORD }}
          machine api.github.com
          login ${{ env.GIT_USERNAME }}
          password ${{ env.GIT_PASSWORD }}
          EOF
          chmod 600 $HOME/.netrc

          # Now push that commit to the source branch.
          git commit -am "${{ env.FIX_COMMIT_MESSAGE }}"
          git push origin HEAD:${{ github.head_ref }}

  build_and_preview:
    needs: build_public
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_SCIENCE_COOKIES }}"
          projectId: science-cookies
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
